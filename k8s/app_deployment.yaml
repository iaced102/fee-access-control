apiVersion: apps/v1
kind: Deployment
metadata:
  name: {APP_NAME}-{TARGET_ROLE}
  labels:
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {APP_NAME}
      tier: backend
      role: {TARGET_ROLE}
  template:
    metadata:
      labels:
        app: {APP_NAME}
        tier: backend
        role: {TARGET_ROLE}
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/agent-pre-populate-only: 'true'
        vault.hashicorp.com/agent-requests-cpu: '10m'
        vault.hashicorp.com/agent-requests-mem: '64Mi'
        vault.hashicorp.com/role: 'backend'
        vault.hashicorp.com/agent-inject-secret-config-postgres: 'symper/backend/{SERVICE_ENV}/postgresql'
        # Environment variable export template
        vault.hashicorp.com/agent-inject-template-config-postgres: |
          {{- with secret "symper/backend/{SERVICE_ENV}/postgresql" -}}
            export POSTGRES_USER="{{ .Data.data.username }}"
            export POSTGRES_PASS="{{ .Data.data.password }}"
          {{- end }}
        vault.hashicorp.com/agent-inject-secret-config-cache: 'symper/backend/{SERVICE_ENV}/cache'
        vault.hashicorp.com/agent-inject-template-config-cache: |
          {{- with secret "symper/backend/{SERVICE_ENV}/cache" -}}
            export CACHE_PASS="{{ .Data.data.password }}"
          {{- end }}
    spec:
      imagePullSecrets:
      - name: regcred
      serviceAccountName: symper
      containers:
      - name: {APP_NAME}
        ports:
        - containerPort: 9000
        image: registry.symper.vn/{SYMPER_IMAGE}
        env:
          - name: TZ
            value: Asia/Ho_Chi_Minh
        lifecycle:
            postStart:
              exec:
                command: [ "/bin/sh","-c","cp /src/replace_vars.sh /var/www/app && chmod u+x /var/www/app/replace_vars.sh && /var/www/app/replace_vars.sh"]
        volumeMounts:
        - name: config-env
          mountPath: /src
        - name: authorization-key
          mountPath: /var/www/app/Crypt
          readOnly: true
        - name: logging
          mountPath: /var/www/app/log
        resources:
          requests:
            memory: "10Mi"
            cpu: "10m"
          limits:
            memory: "500Mi"
            cpu: "500m"
      - name: nginx-{APP_NAME}
        image: registry.symper.vn/nginx:1.4
        ports:
        - containerPort: 80
        volumeMounts:
        - name: config
          mountPath: /etc/nginx/conf.d
        resources:
          requests:
            memory: "10Mi"
            cpu: "10m"
          limits:
            memory: "500Mi"
            cpu: "500m"
      volumes:
      - name: config-env
        configMap:
          name: app-config-{APP_NAME}
      - name: authorization-key
        projected:
          sources:
          - secret:
              name: authorization-public-key
          - secret:
              name: old-authorization-public-key
      - name: config
        configMap:
          name: nginx-config-{APP_NAME}
          items:
          - key: config
            path: {SERVICE_NAME}.conf
      - name: logging
        hostPath:
          path: /var/log/symper/{APP_NAME}
